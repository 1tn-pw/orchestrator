---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: orchestrator
  namespace: 1tn-pw
  labels:
    name: orchestrator
    app: orchestrator
spec:
  replicas: 2
  strategy:
    rollingUpdate:
      maxUnavailable: 1
  selector:
    matchLabels:
      app: orchestrator
      name: orchestrator
  template:
    metadata:
      labels:
        app: orchestrator
        name: orchestrator
    spec:
      imagePullSecrets:
        - name: docker-registry-secret
      containers:
        - name: orchestrator
          image: containers.chewed-k8s.net/1tn-pw/orchestrator:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 80
              name: http
            - containerPort: 3000
              name: grpc
          env:
            - name: DEVELOPMENT
              value: "false"

---
apiVersion: v1
kind: Service
metadata:
  name: orchestrator
  namespace: 1tn-pw
  labels:
    app: orchestrator
    name: orchestrator
spec:
  ports:
    - port: 80
      protocol: TCP
      targetPort: 80
      name: http
    - port: 3000
      protocol: TCP
      targetPort: 3000
      name: grpc
  selector:
    app: orchestrator
    name: orchestrator

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  namespace: 1tn-pw
  name: orchestrator-ingress
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /$2
    cert-manager.io/cluster-issuer: live-issuer
  labels:
    app: orchestrator
    name: orchestrator
spec:
  ingressClassName: nginx
  tls:
    - hosts:
        - api.1tn.pw
      secretName: orchestrator-1tn-pw-tls
  rules:
    - host: api.1tn.pw
      http:
        paths:
          - path: /v1(/|$)(.*)
            pathType: Prefix
            backend:
              service:
                name: orchestrator
                port:
                  number: 80
